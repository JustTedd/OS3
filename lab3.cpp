hread(NULL, 0, (LPTHREAD_START_ROUTINE)Thread_e, NULL, 0, &ThreadID); Thread_array[i++]=CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)Thread_g, NULL, 0, &ThreadID); Thread_array[i++]=CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)Thread_m, NULL, 0, &ThreadID); Thread_array[i++]=CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)Thread_k, NULL, 0, &ThreadID); Thread_array[i++]=CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)Thread_h, NULL, 0, &ThreadID); Thread_array[i++]=CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)Thread_n, NULL, 0, &ThreadID); Thread_array[i++]=CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)Thread_p, NULL, 0, &ThreadID); WaitForMultipleObjects(NUM_THREADS, Thread_array, TRUE, INFINITE); for (int i = 0; i < NUM_THREADS; i++) { CloseHandle(Sem_array[i]); CloseHandle(Thread_array[i]); } CloseHandle(lock); return 0; }
